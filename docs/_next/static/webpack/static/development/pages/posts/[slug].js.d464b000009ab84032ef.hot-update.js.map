{"version":3,"file":"static/webpack/static/development/pages/posts/[slug].js.d464b000009ab84032ef.hot-update.js","sources":["webpack:///./pages/posts/[slug].js"],"sourcesContent":["import { useRouter } from 'next/router'\nimport ErrorPage from 'next/error'\nimport Container from '../../components/container'\nimport PostBody from '../../components/post-body'\nimport Header from '../../components/header'\nimport PostHeader from '../../components/post-header'\nimport Layout from '../../components/layout'\n// import { getPostBySlug, getAllPosts } from '../../lib/api'\nimport PostTitle from '../../components/post-title'\nimport Head from 'next/head'\nimport { CMS_NAME } from '../../lib/constants'\nimport markdownToHtml from '../../lib/markdownToHtml'\nimport fetch from 'isomorphic-unfetch'\nimport { server } from '..'\nimport markdownStyles from '../../components/markdown-styles.module.css'\nconst katexConv = require(\"showdown-katex\")\nimport { FiArrowLeft, FiArrowRight } from \"react-icons/fi\";\n\nexport default function Post({ post, morePosts, preview, slugs, posts }) {\n  const router = useRouter()\n  if (!router.isFallback && !post?.slug) {\n    return <ErrorPage statusCode={404} />\n  }\n\n  console.log(post.slug)\n\n  console.log(slugs.indexOf(post.slug))\n\n  console.log(posts[0].title)\n  console.log(slugs.indexOf(post.slug) !== 0)\n\n  console.log(slugs.indexOf(post.slug) !== slugs.length-1)\n  return (\n    <Layout preview={preview}>\n      <Container>\n        <Header />\n        {router.isFallback ? (\n          <PostTitle>Loadingâ€¦</PostTitle>\n        ) : (\n            <>\n              <article className=\"mb-32\">\n                <Head>\n                  <title>\n                    {post.title} | Next.js Blog Example with {CMS_NAME}\n                  </title>\n                  <meta property=\"og:image\" content={post.ogImage.url} />\n                </Head>\n                <PostHeader\n                  title={post.title}\n                  coverImage={post.coverImage}\n                  date={post.date}\n                  author={post.author}\n                />\n                <div className=\"max-w-3xl mx-auto\">\n                  <div\n                    className={markdownStyles['markdown']}\n                    dangerouslySetInnerHTML={{ __html: post.content }}\n                  />\n                  <div className=\"bg-white text-black px-12 py-28 flex flex-col lg:flex-row items-center\">\n                    <h3 className=\"text-4xl lg:text-5xl font-bold text-black tracking-tighter leading-tight text-center lg:text-left mb-10 lg:mb-0 lg:pr-4 lg:w-1/2\">\n                      That's the end!\n                    </h3>\n                    <div className=\"flex flex-col lg:flex-row justify-center items-center lg:pl-4 lg:w-1/2\">\n                      {\n                        slugs.indexOf(post.slug) !== 0 && (\n                          <a\n                            href={`${server}/posts/${slugs[slugs.indexOf(post.slug) - 1]}`}\n                            className=\"mx-3 font-bold hover:underline text-black \"\n                          >\n                            <FiArrowLeft />{posts[slugs.indexOf(post.slug) - 1].title}\n                          </a>\n                        )\n                      }\n\n                      {\n                        slugs.indexOf(post.slug) !== slugs.length && (\n                          <a\n                            href={`${server}/posts/${slugs[slugs.indexOf(post.slug) + 1]}`}\n                            className=\" mx-3 border border-black font-bold py-3 px-12 lg:px-8 duration-200 transition-colors mb-6 lg:mb-0\"\n                          >\n                            <FiArrowRight />\n                            Next: {posts[slugs.indexOf(post.slug) + 1].title}\n                          </a>\n                        )\n                      }\n\n                    </div>\n                  </div>\n\n                </div>\n\n\n\n              </article>\n            </>\n          )}\n      </Container>\n    </Layout>\n  )\n}\n\nexport async function getStaticProps({ params, hostname }) {\n\n  console.log(hostname)\n\n  let post = await fetch(`${server}/api/posts/${params.slug}?fields=title,date,slug,author,content,ogImage,coverImage`).then(e => e.json())\n\n  let slugs = await fetch(`${server}/api/slugs`).then(e => e.json())\n  let posts = await fetch(`${server}/api/allPosts`).then(e => e.json())\n\n  console.log(slugs)\n\n  var showdown = require('showdown'),\n    converter = new showdown.Converter({\n      extensions: [\n        katexConv({\n          displayMode: true,\n          throwOnError: false, // allows katex to fail silently\n          errorColor: '#ff0000',\n          delimiters: [\n            { left: \"$$\", right: \"$$\", display: false },\n            { left: '~', right: '~', display: false, asciimath: true },\n          ],\n        })\n      ]\n    }),\n    content = await converter.makeHtml(post.content);\n\n  return {\n    props: {\n      post: {\n        ...post,\n        content,\n      },\n      slugs,\n      posts\n    },\n  }\n}\n\nexport async function getStaticPaths() {\n\n  const posts = await fetch(`${server}/api/allPosts`).then(e => e.json())\n\n  return {\n    paths: posts.map(posts => {\n      return {\n        params: {\n          slug: posts.slug,\n        },\n      }\n    }),\n    fallback: false,\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;;;;A","sourceRoot":""}